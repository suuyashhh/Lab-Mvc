@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "CasePaper Create";
}

<!-- jQuery and jQuery UI -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>
<link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/smoothness/jquery-ui.css">



<style>
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif;
    }

    body {
        background-color: #f5f5f5;
    }

    .headerd {
        background-color: #5f9278;
        color: white;
        padding: 20px;
        display: flex;
        align-items: center;
        gap: 20px;
    }

    .back-button {
        background: none;
        border: none;
        color: white;
        font-size: 24px;
        cursor: pointer;
        padding: 8px;
    }

    .headerd h1 {
        font-size: 24px;
        font-weight: normal;
    }

    .container {
        padding: 20px;
        max-width: 800px;
        margin: 0 auto;
    }

    .form-group {
        margin-bottom: 24px;
        position: relative;
    }

        .form-group label {
            display: block;
            color: #333;
            font-size: 16px;
            margin-bottom: 8px;
        }

    .input-field {
        width: 100%;
        padding: 12px 16px;
        border: 1px solid #000;
        border-radius: 8px;
        font-size: 16px;
        outline: none;
        transition: border-color 0.3s;
    }

        .input-field:focus {
            border-color: #5f9278;
        }

    .row {
        display: flex;
        gap: 20px;
    }

    .col {
        flex: 1;
    }

    .unit-field {
        background-color: white;
        color: #666;
    }

    textarea.input-field {
        min-height: 120px;
        resize: vertical;
    }

    .section-title {
        font-size: 24px;
        margin: 40px 0 20px;
    }

    .section-subtitle {
        color: #666;
        margin-bottom: 20px;
    }

    .checkbox-group {
        display: flex;
        align-items: center;
        gap: 12px;
        margin-top: 40px;
    }

        .checkbox-group input[type="checkbox"] {
            width: 20px;
            height: 20px;
            border: 1px solid #000;
            border-radius: 4px;
        }

        .checkbox-group label {
            font-size: 16px;
            color: #333;
        }



    .tests-section {
        max-width: 100%;
        overflow-x: hidden;
    }

    .section-subtitle {
        color: #333;
        margin: 30px 0 20px;
        font-size: 20px;
        font-weight: 500;
    }

    .table-responsive {
        overflow-x: auto;
        border-radius: 8px;
        border: 1px solid #ddd;
        max-width: 100%;
        width: 100%;
        background-color: #fff;
    }

    table {
        width: 100%;
        border-collapse: collapse;
    }

    th, td {
        padding: 12px;
        border-bottom: 1px solid #ddd;
        text-align: left;
    }

    th {
        background-color: #5f9278;
        color: white;
    }

    tr:hover {
        background-color: #eee;
    }

    .delete-btn {
        background-color: #dc3545;
        color: white;
        border: none;
        padding: 6px 12px;
        border-radius: 4px;
        cursor: pointer;
        font-size: 14px;
    }

        .delete-btn:hover {
            background-color: #c82333;
        }

    input {
        width: 100%;
        border: 1px solid #ccc;
        padding: 6px;
        font-size: 16px;
        border-radius: 4px;
        outline: none;
    }

    .blood-tests-table {
        width: 100%;
        min-width: 600px;
        border-collapse: collapse;
        background-color: #f5f5f5;
    }

        .blood-tests-table th,
        .blood-tests-table td {
            padding: 12px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }

        .blood-tests-table th {
            background-color: #5f9278;
            color: white;
            font-weight: bold;
        }

        .blood-tests-table tbody tr:hover {
            background-color: #eee;
        }

    /* .delete-btn {
        background-color: #dc3545;
        color: white;
        border: none;
        padding: 6px 12px;
        border-radius: 4px;
        cursor: pointer;
        font-size: 14px;
        transition: background-color 0.3s;
    }

        .delete-btn:hover {
            background-color: #c82333;
        }*/

    .add-test-section {
        margin-top: 20px;
    }

    .test-inputs {
        display: flex;
        gap: 15px;
        align-items: center;
    }

    .select-test {
        flex: 1;
    }

    .add-btn {
        background-color: #5f9278;
        color: white;
        border: none;
        padding: 12px 24px;
        border-radius: 8px;
        cursor: pointer;
        font-size: 16px;
        transition: background-color 0.3s;
        white-space: nowrap;
    }

        .add-btn:hover {
            background-color: #4a7259;
        }

    @@media (max-width: 768px) {
        .test-inputs {
            flex-direction: column;
        }

        .add-btn {
            width: 100%;
        }
    }

    .ui-autocomplete {
        max-height: 200px;
        overflow-y: auto;
        background: white;
        border: 1px solid #ccc;
        z-index: 9999 !important;
    }

</style>

<div class="body">
    <div class="pagetitle">
        <h1>Case Paper</h1>
        <nav>
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="index.html">Home</a></li>
                <li class="breadcrumb-item active">Case Paper</li>
            </ol>
        </nav>
    </div>


    <div class="container">
        <form>
            <div class="form-group">
                <label>Petient Name</label>
                <input type="text" id="PName" class="input-field">
            </div>

            <div class="form-group">
                <label>Date Of Birth</label>
                <input type="text" id="PBOD" class="input-field">
            </div>

            <div class="row">
                <div class="col form-group">
                    <label>Gender</label>
                    <input type="text" id="Gender" class="input-field">
                </div>
                <div class="col form-group">
                    <label>Phone Number</label>
                    <input type="text" id="PNumber" class="input-field unit-field">
                </div>
            </div>

            <div class="form-group">
                <label>Address (Optional)</label>
                <textarea type="text" rows="3" class="input-field"></textarea>
            </div>

            <div class="form-group">
                <label>Doctor Reference</label>
                <input type="text" id="Doctor" class="input-field">
            </div>

            <div class="tests-section">
                <h3 class="section-subtitle" style="color: #333; margin: 30px 0 20px;">Blood Tests</h3>

                <!-- Table -->
                <div class="table-responsive">
                    <table class="blood-tests-table" id="tblMaterials">
                        <thead>
                            <tr>
                                <th>Sr No</th>
                                <th>Test Name</th>
                                <th>Price (₹)</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody>
                        </tbody>
                        <thead>
                            <tr>
                                <th colspan="2">Total Amount</th>
                                <th id="totalPrice">₹0</th>
                                <th></th>
                            </tr>
                        </thead>
                    </table>
                </div>

                <!-- Add Test Section -->
                <div class="add-test-section">
                    <div class="test-inputs">
                        <input class="input-field select-test" id="TestName" name="TestName" placeholder="Test Name" type="text" autocomplete="off" />
                        <input type="hidden" id="hfTestId" />
                        <input type="hidden" id="hfPrice" />
                        <input type="hidden" id="hfLabPrice" />
                        <a class="add-btn" id="btnAdd" href="javascript:void(0);">Add Test</a>
                    </div>
                </div>
            </div>

            <h2 class="section-title">Discount (%)</h2>
            <p class="section-subtitle">If you gave the discount please fill in the below field</p>

            <div class="form-group">
                <label>Dis (%)</label>
                <input type="text" class="input-field">
            </div>

            <h2 class="section-title">Collection</h2>
            <div class="checkbox-group">
                <input type="checkbox" id="counter-sales">
                <label for="counter-sales">Home Collection</label>
            </div>



            <div class="tests-section">
                <div class="add-test-section">
                    <div class="test-inputs" style="justify-content:end">
                        @*<a href="@Url.Action("Index","CasePaper")" class="add-btn">Save</a>*@
                        <button class="add-btn" id="save">Save</button>
                        @*<button class="add-btn" style="background:red!important">Cancle</button>*@
                        <a class="add-btn" style="background:red!important" href="/CasePaper/index" data-ajax-update="#mainContent" data-ajax-mode="replace" data-ajax-method="GET" data-ajax="true">Cancle</a>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>
<script type="text/javascript">
   $(document).ready(function () {
    $("#save").click(function (e) {
        e.preventDefault(); 


        var _ObjCsPaper = {
            PatientName: $("#PName").val(),
            DateOfBirth: $("#PBOD").val(),
            Gender: $("#Gender").val(),
            Contact: $("#PNumber").val(),
            Doctor: $("#Doctor").val()
        };

        $("#mainContent").html('<div></div>');

        $.ajax({
            url: '@Url.Action("Create", "CasePaper")', 
            type: "POST",
            contentType: "application/json",
            dataType: "json",
            data: JSON.stringify(_ObjCsPaper),
            success: function (response) {
                console.log("Response: ", response, status);
                if (response.Status) {
                    $.smallBox({
                        title: "Save Form",
                        content: "Successfully saved",
                        color: "#C46A69",
                        timeout: 7000,
                    });
                }
                if (response === 0) {
                    $.ajax({
                        url: '@Url.Action("Index", "CasePaper")',
                        type: "GET",
                        success: function (data) {
                            $("#mainContent").html(data);
                        },
                        error: function (err) {
                            console.error("Error loading index: ", err);
                        }
                    });
                }
            },
            error: function (xhr, status, error) {
                console.error("AJAX Error: ", status, error);
                alert("Error: " + error);
            }
        });
    });

       $("#btnAdd").click(function () {
           if ($("#hfTestId").val() == 0 || $("#TestName").val().trim() === "") {
               alert("Please select a valid test.");
               $("#TestName").focus();
               return false;
           }

           let cur_row_num = $("#tblMaterials tbody tr").length;
           let TestCode = $("#hfTestId").val();
           let TestName = $("#TestName").val();
           let price = $("#hfPrice").val();
           let labprice = $("#hfLabPrice").val();
                      
           if (document.getElementById(TestCode)) {
               alert("Duplicate test is not allowed.");
               return;
           }

           let row = `
            <tr id="row${cur_row_num}">
                <td>${cur_row_num}</td>
                <td>${TestName}
                    <input type='hidden' id='MatCode${cur_row_num}' value='${TestCode}'>
                    <input type='hidden' id='${TestCode}' value='${TestCode}'>
                    <input type='hidden' id='LabPrice${cur_row_num}' value='${labprice}'>
                </td>
                <td id="Amount${cur_row_num}">${price}</td>
                <td>
                    <a class="delete-btn remove-row" href="javascript:void(0);">Delete</a>
                </td>
            </tr>
        `;

           $("#tblMaterials tbody").append(row);

           
           $("#TestName").val('');
           $("#hfTestId").val(0);
           $("#hfPrice").val('');
           $("#hfLabPrice").val('');

           regen_srno();
           calculateSum();
       });

       
       $("#tblMaterials").on("click", ".remove-row", function () {
           $(this).closest("tr").remove();
           regen_srno();
           calculateSum();
       });

       function regen_srno() {
           $("#tblMaterials tbody tr").each(function (index) {
               $(this).find("td:first").text(index + 1);
           });
       }

       function calculateSum() {
           let total = 0;
           $("#tblMaterials tbody tr").each(function () {
               let amount = parseFloat($(this).find("td[id^=Amount]").text()) || 0;
               total += amount;
           });
           $("#totalPrice").text("₹" + total);
       }
   });


       $('#tblMaterials').on('click', '.remove-row', function () {
           $(this).closest('tr').remove();
           regen_srno();
           calculateSum();
       });

       $('#tblMaterials').on('input', '.qty-field, .rate-field', function () {
           calculateAmt(this);
       });

       function regen_srno() {
           $('#tblMaterials > tbody > tr').not(':last').each(function (index) {

               $(this).find('td:first').text(index + 1);

               $(this).find('input, label').each(function () {
                   var currentId = $(this).attr('id');
                   if (currentId) {

                       var newId = currentId.replace(/\d+$/, index + 1);
                       $(this).attr('id', newId);
                   }
               });
           });
       }

       function removeRow(button) {
           $(button).closest('tr').remove();
           regen_srno();
           calculateSum();
       }

       function calculateSum() {
           var sum = 0;

           $('#tblMaterials').find("[id*=Amount]").each(function () {
               sum += parseFloat($(this).val()) || 0;
           });
           $('#transaction').val(sum.toFixed(2));
           assignBasicAmount();
       }

       function calculateAmt(obj) {
           var $row = $(obj).closest('tr');
           var NQty = parseFloat($row.find("[id^=Qty]").val()) || 0;
           var NRate = parseFloat($row.find("[id^=Rate]").val()) || 0;

           var Total = NQty * NRate;

           $row.find("[id^=Amount]").val(Total.toFixed(2));

           calculateSum();
       }

       function assignBasicAmount() {
           $('#TaxAmount1').val($('#transaction').val());
           calculate();
       }


       $(function () {
           $('[id*=TestName]').keyup(function () {
               if ($("#TestName").val().trim().length >= 3) {
                   dontBlock = true;
               }
           });
           debugger;
           $("#TestName").autocomplete({
               minLength: 1,
               source: function (request, response) {
                   console.log("Request Sent:", request.term); 
                   $.ajax({
                       url: "/CasePaper/TestAutoFill",
                       type: "POST",
                       dataType: "json",
                       contentType: "application/json; charset=utf-8",
                       data: JSON.stringify({ searchtext: request.term }),
                       success: function (data) {
                           console.log("Response Received:", data);
                           if (!Array.isArray(data)) {
                               console.error("Error: Response is not an array", data);
                               return;
                           }
                           response($.map(data, function (item) {
                               return {
                                   label: item.TestName + " - ₹" + item.Price, 
                                   value: item.TestName, 
                                   id: item.TestCode,
                                   price: item.Price,
                                   labprice: item.LabPrice
                               };
                           }));
                       },
                       error: function (xhr, status, error) {
                           console.error("AJAX Error:", status, error);
                       }
                   });
               },
               select: function (event, ui) {
                   $("#TestName").val(ui.item.value);
                   $("#hfTestId").val(ui.item.id);
                   $("#hfPrice").val(ui.item.price);
                   $("#hfLabPrice").val(ui.item.labprice);
                   return false; 
               }
           }).autocomplete("instance")._renderItem = function (ul, item) {
               return $("<li>")
                   .append("<div>" + item.label + "</div>") 
                   .appendTo(ul);
           };




       });
   

</script>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        document.querySelectorAll("#tblMaterials td[data-editable='true']").forEach(cell => {
            cell.addEventListener("click", function () {
                let currentValue = this.textContent.trim();

                // Prevent duplicate input elements
                if (this.querySelector("input")) return;

                let input = document.createElement("input");
                input.type = "text";
                input.value = currentValue;
                this.innerHTML = "";
                this.appendChild(input);
                input.focus();

                // On losing focus, save and revert to text
                input.addEventListener("blur", function () {
                    cell.textContent = this.value.trim();
                });

                // Save on pressing Enter
                input.addEventListener("keypress", function (event) {
                    if (event.key === "Enter") {
                        event.preventDefault();
                        input.blur();
                    }
                });
            });
        });
    });
</script>